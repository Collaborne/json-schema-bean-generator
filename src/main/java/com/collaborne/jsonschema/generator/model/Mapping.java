/* Licensed to Collaborne B.V. under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  Collaborne licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package com.collaborne.jsonschema.generator.model;

import java.net.URI;

import com.collaborne.jsonschema.generator.java.ClassName;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

// XXX: should be generated by the generator?
// TODO: need "additional interfaces to be implemented", "inject header" (for licenses etc)
// TODO: decide whether className is FQCN or we have a #getPackage() as well
public class Mapping {
	private URI target;
	private ClassName className;

	public Mapping() {
		// For jackson
	}

	public Mapping(URI target, ClassName className) {
		this.target = target;
		this.className = className;
	}

	public URI getTarget() {
		return target;
	}

	public void setTarget(URI target) {
		this.target = target;
	}

	@JsonDeserialize(converter=ClassNameConverter.class)
	public ClassName getClassName() {
		return className;
	}

	public void setClassName(ClassName className) {
		this.className = className;
	}

	@Override
	public String toString() {
		return "Mapping(" + target + " -> " + className + ")";
	}
}